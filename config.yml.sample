---

####################
# General settings #
####################

general:
  # Set the hostname of the server
  hostname: homeserver

  # Web domain name of the server
  domain: homeserver.example.com

  # Set the timezone
  timezone: Etc/UTC

  # Whether to auto-update packages.
  # Can be "all" for all updates, "security" for security updates only, or
  # "none" for no updates
  auto_update_packages: security

users:
  worker: worker
  nas: nas


####################
# Storage settings #
####################

storage:

  # Directory in which application data will be stored
  data_dir: /data

  # Directory in which NAS will be mounted
  nas_dir: /nas

  # Directory for Docker images
  docker_dir: /var/lib/docker

  # Define LVM volumes
  vg: pool
  volumes:
    root:
      mount: /
      size: 64G
      fs: ext4

    nas:
      mount: /nas
      size: 50G
      fs: ext4

    data:
      mount: /data
      size: 100G
      fs: ext4


################
# DDNS options #
################

ddns_enabled: yes

# Cloudflare zone to which the server's domain belongs
ddns_cloudflare_zone: example.com

# This token requires the Zone/Zone/Read permission for all zones, and
# Zone/DNS/Edit permission for the zone containing the domain for the server.
ddns_cloudflare_api_token: <your_cloudflare_api_token>


######################
# DNS server options #
######################

dnsmasq_enabled: false

dnsmasq_custom_hosts:
  - name: "{{ general.domain }}"
    ip: "{{ ansible_default_ipv4.address }}"


#################
# Samba options #
#################

# See https://github.com/vladgh/ansible-collection-vladgh-samba
samba_guest_account: "{{ users.nas }}"
samba_shares_root: "{{ storage.nas_dir }}"
samba_manage_directories: no
samba_netbios_name: "{{ general.hostname | split('.') | first }}"
samba_server_string: Home NAS

# Just run as a standalone SMB server, not a WINS or AD server
samba_wins_support: no
samba_domain_master: no
samba_preferred_master: no
samba_local_master: yes

# Treat unknown users as guests, but treat bad passwords as errors.
# See https://www.samba.org/samba/docs/current/man-html/smb.conf.5.html
samba_map_to_guest: Bad User

samba_shares:
  - name: Dump
    comment: A place for files to go
    public: yes
    writeable: yes

  - name: Media
    comment: Media to be streamed using Jellyfin
    public: yes
    writable: yes


############################
# Minecraft server options #
############################

minecraft_server_enabled: no


######################
# Authentik settings #
######################

# After Authentik is enabled, go to https://<hostname>:9443/if/flow/initial-setup/
authentik_enabled: no

# Traefik routing options for Authentik
authentik_routing:
  enabled: true
  subdomain: authentik

# See https://docs.goauthentik.io/docs/installation/configuration for documentation
authentik_env:
  PG_PASS: "{{ undef }}" # Use Ansible Vault to store an encrypted password here


####################
# Traefik settings #
####################

traefik_enabled: yes

traefik_ports:
    http: 80
    https: 443

# See https://doc.traefik.io/traefik/https/acme/ for information on how to
# configure the provider and environment variables.
traefik_acme_dns:
  enabled: yes
  provider: cloudflare

  # Email for Let's Encrypt, used to receive expiry notifications.
  # This doesn't need to be encrypted, but doing so hides it from bots scraping
  # GitHub for credentials.
  email: <your_email>

  # This is sensitive and must be encrypted, e.g. using Ansible Vault.
  env:
    # This API token needs Zone/Zone/Read permissions for all zones, and
    # Zone/DNS/Edit permissions for the zone containing the domain for the
    # server.
    CF_DNS_API_TOKEN: <your_cloudflare_api_token>


######################
# Tailscale settings #
######################

tailscale_enabled: false

# Subnets to route traffic to
tailscale_routes:
  - "10.0.0.0/24"

# Use Ansible Vault to put your encrypted auth key here
tailscale_auth_key: "{{ undef }}"


###################
# Homarr settings #
###################

homarr_enabled: true
homarr_routing:
  enabled: true
  homepage: true


##################
# Minio settings #
##################

minio_enabled: true

minio_routing:
  enabled: true
  api_subdomain: s3
  ui_subdomain: minio

# Use Ansible Vault to put your encrypted credentials here
minio_root_user: "{{ undef }}"
minio_root_password: "{{ undef }}"


#####################
# Jellyfin settings #
#####################

jellyfin_enabled: false


#######################
# Prometheus settings #
#######################

prometheus_enabled: yes
