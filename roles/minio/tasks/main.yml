---
- name: Set up Minio
  when: minio_enabled is true
  block:
    - name: Create Minio data directory
      ansible.builtin.file:
        name: "{{ minio_data_dir }}"
        state: directory
        owner: "{{ users.worker }}"
        group: "{{ users.worker }}"
        mode: '0755'
        recurse: false

    - name: Start Minio container
      community.docker.docker_container:
        name: minio
        image: "{{ minio_container.image }}:{{ minio_container.tag }}"
        pull: always
        image_name_mismatch: recreate
        command: 'server /data --console-address ":9001"'
        restart_policy: unless-stopped
        env: >-
          {{ minio_env | combine({
            "MINIO_ROOT_USER": minio_root_user | mandatory,
            "MINIO_ROOT_PASSWORD": minio_root_password | mandatory,
          }) }}
        volumes:
          - "{{ minio_data_dir }}:/data"
        labels:
          traefik.enable: "{{ minio_routing.enabled | default(false) | ternary('true', 'false') }}"
          traefik.http.routers.minio-api.rule: "Host(`{{ minio_routing.api_subdomain }}.{{ general.domain }}`)"
          traefik.http.routers.minio-api.service: minio-api
          traefik.http.routers.minio-api.entrypoints: websecure
          traefik.http.services.minio-api.loadbalancer.server.port: "9000"
          traefik.http.routers.minio-ui.rule: "Host(`{{ minio_routing.ui_subdomain }}.{{ general.domain }}`)"
          traefik.http.routers.minio-ui.service: minio-ui
          traefik.http.routers.minio-ui.entrypoints: websecure
          traefik.http.services.minio-ui.loadbalancer.server.port: "9001"
        networks_cli_compatible: false
        networks:
          - name: subway


- name: Stop Minio
  when: minio_enabled is false
  block:
    - name: Stop Minio container
      community.docker.docker_container:
        name: minio
        state: absent
