---
- name: Set up dnsmasq
  when: dnsmasq_enabled is true
  block:
    - name: Create data directory
      ansible.builtin.file:
        name: "{{ dnsmasq_data_dir }}"
        state: directory
        owner: "{{ users.worker }}"
        group: "{{ users.worker }}"
        mode: '0750'

    - name: Render configuration file
      ansible.builtin.template:
        src: dnsmasq.conf
        dest: "{{ dnsmasq_data_dir }}/dnsmasq.conf"
        owner: "{{ users.worker }}"
        group: "{{ users.worker }}"
        mode: '0640'
      notify: Restart dnsmasq container

    - name: Start dnsmasq
      community.docker.docker_container:
        name: dnsmasq
        image: ghcr.io/dockur/dnsmasq:{{ dnsmasq_tag }}
        pull: always
        image_name_mismatch: recreate
        state: started
        restart_policy: unless-stopped
        ports:
          - "53:53/udp"
          - "53:53/tcp"
        volumes:
          - "{{ dnsmasq_data_dir }}/dnsmasq.conf:/etc/dnsmasq.conf:ro"
        capabilities:
          - NET_ADMIN

    - name: Use dnsmasq for our own DNS lookups
      block:
        - name: Ensure resolvconf is installed
          ansible.builtin.package:
            name: resolvconf
            state: present

        - name: Set /etc/resolv.conf head contents
          ansible.builtin.lineinfile:
            path: /etc/resolvconf/resolv.conf.d/head
            create: true
            owner: root
            group: root
            mode: '0644'
            line: nameserver 127.0.0.1
            regexp: "^nameserver\\s+(127\\.0\\.0\\.1|::1|localhost)"
            insertafter: '^#'
          notify: Regenerate resolv.conf

        - name: Ensure resolvconf is running
          ansible.builtin.service:
            name: resolvconf
            state: started

- name: Disable dnsmasq
  when: dnsmasq_enabled is false
  block:
    - name: Stop dnsmasq
      community.docker.docker_container:
        name: dnsmasq
        state: absent
