services:
  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    pull_policy: always
    user: "{{ worker_uid }}"
    restart: unless-stopped
    volumes:
      - "{{ monitoring_prometheus_data_dir }}/prometheus.yml:/etc/prometheus/prometheus.yml:ro"
      - "{{ monitoring_prometheus_data_dir }}/data:/prometheus"
    labels:
      traefik.enable: "{{ monitoring_prometheus_routing_enabled | ternary('true', 'false') }}"
      traefik.http.routers.prometheus.rule: Host(`{{ monitoring_prometheus_routing_subdomain }}.{{ general.domain }}`)
      traefik.http.routers.prometheus.middlewares: "{{ monitoring_prometheus_routing_private | ternary('privateip@file', '') }}"
      traefik.http.routers.prometheus.entrypoints: websecure
      traefik.http.services.prometheus.loadbalancer.server.port: "9090"

  node_exporter:
    container_name: prometheus-node-exporter
    image: quay.io/prometheus/node-exporter:latest
    pull_policy: always
    user: "{{ worker_uid }}"
    restart: unless-stopped
    command:
      - "--path.rootfs=/host"
    pid: host
    # network_mode: host
    volumes:
      - "/:/host:ro,rslave"

  cadvisor:
    container_name: prometheus-cadvisor
    image: gcr.io/cadvisor/cadvisor:latest
    pull_policy: always
    restart: unless-stopped
    # privileged: true
    devices:
      - /dev/kmsg
    volumes:
      - "/:/rootfs:ro"
      - "/var/run:/var/run:ro"
      - "/sys:/sys:ro"
      - "/var/lib/docker:/var/lib/docker:ro"
      - "/dev/disk:/dev/disk:ro"
