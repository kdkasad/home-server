---
name: monitoring

networks:
  default: {}
  subway:
    external: true
    name: subway

services:
  prometheus:
    container_name: prometheus
    image: quay.io/prometheus/prometheus:{{ monitoring_prometheus_tag }}
    pull_policy: always
    user: "{{ worker_uid }}"
    restart: unless-stopped
    extra_hosts:
      - host.docker.internal:host-gateway
    volumes:
      - "{{ monitoring_prometheus_data_dir }}/prometheus.yml:/etc/prometheus/prometheus.yml:ro"
      - "{{ monitoring_prometheus_data_dir }}/extra_scrape_configs.yml:/etc/prometheus/X_extra_scrape_configs.yml:ro"
      - "{{ monitoring_prometheus_data_dir }}/data:/prometheus"
    labels:
      traefik.enable: "{{ monitoring_prometheus_routing_enabled | ternary('true', 'false') }}"
      traefik.http.routers.prometheus.rule: >-
        Host(`{{ monitoring_prometheus_routing_subdomain }}.{{ general.domain }}`)
      traefik.http.routers.prometheus.middlewares: >-
        {{ monitoring_prometheus_routing_private | ternary('privateip@file', '') }}
      traefik.http.routers.prometheus.entrypoints: websecure
      traefik.http.services.prometheus.loadbalancer.server.port: "9090"
    networks:
      - default
      - subway

  grafana:
    container_name: grafana
    image: grafana/grafana-oss:{{ monitoring_grafana_tag }}
    pull_policy: always
    restart: unless-stopped
    user: "{{ worker_uid }}"
    volumes:
      - "{{ monitoring_grafana_data_dir }}/grafana.ini:/etc/grafana/grafana.ini"
      - "{{ monitoring_grafana_data_dir }}/data:/var/lib/grafana"
    environment:
      GF_RENDERING_SERVER_URL: http://renderer:8081/render
      GF_RENDERING_CALLBACK_URL: http://grafana:3000/
      GF_INSTALL_PLUGINS: >-
        https://storage.googleapis.com/integration-artifacts/grafana-lokiexplore-app/grafana-lokiexplore-app-latest.zip;grafana-lokiexplore-app
    labels:
      traefik.enable: "{{ monitoring_grafana_routing_enabled | ternary('true', 'false')}}"
      traefik.http.routers.grafana.rule: Host(`{{ monitoring_grafana_routing_subdomain }}.{{ general.domain }}`)
      traefik.http.routers.grafana.middlewares: >-
        {{ monitoring_grafana_routing_private | ternary('privateip@file', '') }}
      traefik.http.routers.grafana.entrypoints: websecure
      traefik.http.services.grafana.loadbalancer.server.port: "3000"
    networks:
      - default
      - subway

  renderer:
    container_name: grafana-renderer
    image: grafana/grafana-image-renderer:{{ monitoring_grafana_image_renderer_tag }}
    pull_policy: always
    restart: unless-stopped
    user: "{{ worker_uid }}"
    # Don't include the subway network, because only Grafana needs access to
    # this service
    networks:
      - default

  cadvisor:
    container_name: prometheus-cadvisor
    image: gcr.io/cadvisor/cadvisor:{{ monitoring_cadvisor_tag }}
    pull_policy: always
    restart: unless-stopped
    # privileged: true
    command:
      - -docker_only=true
      - -housekeeping_interval=10s
      - -disable_metrics=memory_numa,diskIO,tcp,advtcp,udp,app,process,hugetlb,perf_event,referenced_memory,cpu_topology,resctrl,cpuset,oom_event
    devices:
      - /dev/kmsg
    volumes:
      - "/:/rootfs:ro"
      - "/var/run:/var/run:ro"
      - "/sys:/sys:ro"
      - "/var/lib/docker:/var/lib/docker:ro"
      - "/dev/disk:/dev/disk:ro"
    # Don't include the subway network, because only Prometheus needs access to
    # this service
    networks:
      - default

  loki:
    container_name: loki
    image: grafana/loki:{{ monitoring_loki_tag }}
    pull_policy: always
    restart: unless-stopped
    user: "{{ worker_uid }}"
    command:
      - -config.file=/etc/loki/local-config.yaml
    ports:
      - '127.0.0.1:3100:80'
    expose:
      - 80
      - 9096
    volumes:
      - "{{ monitoring_loki_data_dir }}/local-config.yaml:/etc/loki/local-config.yaml"
      - "{{ monitoring_loki_data_dir }}/data:/loki"
    networks:
      - default
      - subway

  promtail:
    container_name: promtail
    image: grafana/promtail:{{ monitoring_promtail_tag }}
    pull_policy: always
    restart: unless-stopped
    user: root  # Required for reading Docker logs
    group_add:
      - "{{ sd_journal_gid }}"  # For systemd-journal scraper
      - "{{ docker_gid }}"  # For Docker scraper
    command:
      - -config.file=/etc/promtail/config.yml
    expose:
      - 80
    volumes:
      - "{{ monitoring_promtail_data_dir }}/config.yml:/etc/promtail/config.yml"
      - "/var/log:/var/log:ro,rslave"
      - "/run/log/journal:/run/log/journal:ro,rslave"  # For systemd-journal scraper
      - "/etc/machine-id:/etc/machine-id:ro"  # For systemd-journal scraper
      # - "{{ storage.docker_dir | default('/var/lib/docker' ) }}/containers:/var/lib/docker/containers:ro"  # For Docker log files
      - "/var/run/docker.sock:/var/run/docker.sock:ro"  # For Docker container metadata
    # Don't include the subway network, because only Loki needs access to
    # this service
    networks:
      - default
