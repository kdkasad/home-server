---
name: authentik

services:
  postgresql:
    image: postgres:16-alpine
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    volumes:
      - "{{ authentik_data_dir }}/postgres:/var/lib/postgresql/data"
    environment:
      POSTGRES_PASSWORD: ${PG_PASS:?database password required}
      POSTGRES_USER: ${PG_USER:-authentik}
      POSTGRES_DB: ${PG_DB:-authentik}
    env_file:
      - .env

  redis:
    image: redis:alpine
    command: --save 60 1 --loglevel warning
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep -Fq PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    volumes:
      - "{{ authentik_data_dir }}/redis:/data"

  server:
    image: ghcr.io/goauthentik/server:${AUTHENTIK_VERSION}
    restart: unless-stopped
    command: server
    environment:
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_POSTGRESQL__HOST: postgresql
      AUTHENTIK_POSTGRESQL__USER: ${PG_USER:-authentik}
      AUTHENTIK_POSTGRESQL__NAME: ${PG_DB:-authentik}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${PG_PASS}
      # AUTHENTIK_ERROR_REPORTING__ENABLED: "true"
      # WORKERS: 2
    env_file:
      - .env
    volumes:
      - "{{ authentik_data_dir }}/server/media:/media"
      - "{{ authentik_data_dir }}/server/custom-templates:/templates"
    depends_on:
      - postgresql
      - redis
    labels:
      traefik.enable: "{{ authentik_routing.enabled | default(false) | ternary('true', 'false') }}"
      traefik.http.routers.authentik.rule: "Host(`{{ authentik_routing.subdomain | default('authentik') }}.{{ general.domain }}`)"
      traefik.http.services.authentik.loadbalancer.server.port: "9000"

  worker:
    image: ghcr.io/goauthentik/server:${AUTHENTIK_VERSION}
    restart: unless-stopped
    command: worker
    environment:
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_POSTGRESQL__HOST: postgresql
      AUTHENTIK_POSTGRESQL__USER: ${PG_USER:-authentik}
      AUTHENTIK_POSTGRESQL__NAME: ${PG_DB:-authentik}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${PG_PASS}
      # AUTHENTIK_ERROR_REPORTING__ENABLED: "true"
    env_file:
      - .env
    volumes:
      - "{{ authentik_data_dir }}/worker/media:/media"
      - "{{ authentik_data_dir }}/worker/certs:/certs"
      - "{{ authentik_data_dir }}/worker/custom-templates:/templates"
    depends_on:
      - postgresql
      - redis
